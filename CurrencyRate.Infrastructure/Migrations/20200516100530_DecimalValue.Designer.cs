// <auto-generated />
using System;
using CurrencyRate.Infrastructure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurrencyRate.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200516100530_DecimalValue")]
    partial class DecimalValue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CurrencyRate.Core.Auth.ApiKey", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Key");

                    b.ToTable("ApiKey");
                });

            modelBuilder.Entity("CurrencyRate.Core.Domain.CurrencyExchangeRate", b =>
                {
                    b.Property<string>("CurrencyFrom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CurrrencyTo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,10)");

                    b.HasKey("CurrencyFrom", "CurrrencyTo", "Date");

                    b.ToTable("CurrencyExchangeRate");
                });
#pragma warning restore 612, 618
        }
    }
}
